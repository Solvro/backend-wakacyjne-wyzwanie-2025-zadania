import { TSESTree } from "@typescript-eslint/utils";
interface ResultModel {
    hasColonInName: boolean;
    paramNameNotMatchedInPath: boolean;
    paramName?: string;
}
type RuleMessageIds = "paramIdentifierDoesntNeedColon" | "paramIdentifierShouldMatchRouteOrController" | "paramIdentifierShouldMatchRouteOnly";
type RuleOptions = [
    {
        shouldCheckController: boolean;
    }
];
export declare const parsePathParts: (decorator: TSESTree.Decorator) => string[];
/**
 * nestjs allows for paths with _+?()*
 * this rule doesn't support parsing those so we'll just pass
 */
export declare const hasPathPartsAnyRegexParams: (pathPartsToCheck: string[]) => boolean;
/**
 * Checks if there is a matching path part for the paramName
 * @param paramName
 * @param pathPartsToCheck
 * @returns
 */
export declare const isParameterNameIncludedInAPathPart: (paramName: string, pathPartsToCheck: string[]) => boolean;
export declare const shouldTrigger: (decorator: TSESTree.Decorator, ruleOptions: RuleOptions) => ResultModel;
declare const rule: import("@typescript-eslint/utils/ts-eslint").RuleModule<RuleMessageIds, RuleOptions, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
export default rule;
