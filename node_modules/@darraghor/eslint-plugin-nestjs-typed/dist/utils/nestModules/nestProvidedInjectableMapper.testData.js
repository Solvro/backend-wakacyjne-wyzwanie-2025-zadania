import { NestProvidedInjectablesMap } from "./models/NestProvidedInjectablesMap.js";
export const fakeFilePath = "fake/path.ts";
// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
export const fakeContext = {
    parserOptions: {
        ecmaVersion: 2019,
        ecmaFeatures: { globalReturn: false },
        sourceType: "module",
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
};
export const moduleMappingTestData = [
    {
        moduleCode: `import { Module } from "@nestjs/common";

    @Module({
        controllers: [MyController],
        providers: [
            MyProvider,
            MyInjectable,
        ],
        imports: [MyExternalModule, MySecondModule],
        exports: [MyInjectable],
    })
    export class MyModule {}`,
        expectedMapping: [
            fakeFilePath,
            new NestProvidedInjectablesMap(new Set(["MyController"]), new Set(["MyProvider", "MyInjectable"])),
        ],
    },
    {
        moduleCode: `import { Provider } from "@nestjs/common";
import { MyOtherInjectable } from "./config/MyOtherInjectable";

export const MyOtherInjectableProvider: Provider = {
    provide: MyOtherInjectable,
    useFactory: async (
        config: MyService
    ): Promise<MyOtherInjectable> => {
        return new MyOtherInjectable()
    },
    inject: [MyService],
};`,
        expectedMapping: [
            fakeFilePath,
            new NestProvidedInjectablesMap(new Set([]), new Set(["MyOtherInjectable"])),
        ],
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVzdFByb3ZpZGVkSW5qZWN0YWJsZU1hcHBlci50ZXN0RGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9uZXN0TW9kdWxlcy9uZXN0UHJvdmlkZWRJbmplY3RhYmxlTWFwcGVyLnRlc3REYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQ2xGLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxjQUFjLENBQUM7QUFDM0MsbUVBQW1FO0FBQ25FLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRztJQUN2QixhQUFhLEVBQUU7UUFDWCxXQUFXLEVBQUUsSUFBNEI7UUFDekMsWUFBWSxFQUFFLEVBQUMsWUFBWSxFQUFFLEtBQUssRUFBQztRQUNuQyxVQUFVLEVBQUUsUUFBUTtLQUNHO0lBQzNCLDhEQUE4RDtDQUMxRCxDQUFDO0FBQ1QsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUc7SUFDakM7UUFDSSxVQUFVLEVBQUU7Ozs7Ozs7Ozs7OzZCQVdTO1FBQ3JCLGVBQWUsRUFBRTtZQUNiLFlBQVk7WUFDWixJQUFJLDBCQUEwQixDQUMxQixJQUFJLEdBQUcsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLEVBQ3pCLElBQUksR0FBRyxDQUFDLENBQUMsWUFBWSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQzFDO1NBQ0o7S0FDSjtJQUNEO1FBQ0ksVUFBVSxFQUFFOzs7Ozs7Ozs7OztHQVdqQjtRQUNLLGVBQWUsRUFBRTtZQUNiLFlBQVk7WUFDWixJQUFJLDBCQUEwQixDQUMxQixJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFDWCxJQUFJLEdBQUcsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FDakM7U0FDSjtLQUNKO0NBQ0osQ0FBQyJ9